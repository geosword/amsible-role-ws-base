---
# A place to prep your container / vm for something your role will rely on but not actually do. You might consider baking it into your container / vm image if its not sensitive
- hosts: all
  gather_facts: false
  become: true
  tasks:

    - name: "check for python"
      raw: "test -e /usr/bin/python || /usr/bin/pacman -Sy --noconfirm python python-pip"
      changed_when: false

    - name: update everything
      command: /usr/bin/pacman -Syu --noconfirm

    - name: install some things which arent in the container but are in the tar image
      raw: /usr/bin/pacman -S --noconfirm vim base-devel

    - name: include the role defaults
      include_vars:
        dir: ../../defaults/
        extensions:
          - yml

    - name: "Include the user role"
      include_role:
        apply:
          become: true
        name: "{{ preprole }}"
      loop_control:
        loop_var: preprole
      loop:
        - "grog.user"
        - "grog.authorized-key"

    - name: check to see if there's a variable file with the keyservers in it.
      ansible.builtin.stat:
        path: ./vars/zzz_meta_keyservers.yml
      register: keyserversyml
      delegate_to: localhost

    - name: output the variable so we can include it later
      copy:
        dest: ./vars/zz_meta_keyservers.yml
        content: |
          wsbase_pacman_key_servers:
          {{ lookup('community.general.dig', '_pgpkey-http._tcp.eu.pool.sks-keyservers.net', 'qtype=SRV', wantlist=True) | to_nice_yaml }}
        mode: '0444'
      delegate_to: localhost
      when:
        - not keyserversyml.stat.exists

    - name: output the environment
      command: env
      register: ghenv
      delegate_to: localhost

    - name: debug
      ansible.builtin.debug:
        var: ghenv.stdout
